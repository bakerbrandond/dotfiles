# # TODO I moved some scripts to /usr/bin... need to retrieve and add to git
#
# built-in keyboard keys
#

# toggle built in keyboard
#super + {button3,button1}
	#{xinput reattach 15 3, xinput float 15}

# toggle mute
XF86AudioMute
	amixer set Master +1 toggle

# increase/decrease volume
XF86Audio{Raise,Lower}Volume
	amixer set Master +1 5%{+,-}

# increase/decrease brightness
XF86MonBrightness{Up,Down}
	brightnessctl s 11%{+,-}

#
# wm independent hotkeys
#

super + alt + space
    scrot "/home/bbd/Pictures/screenshots/%Y-%m-%d-%k:%M_$wx$h.png -e 'optipng $f'"

# terminal emulator
super + space
	alacritty

# launch Chrome
super + ctrl + space
	flatpak run com.google.Chrome

# program launcher
super + slash
	rofi -no-lazy-grab -show drun -modi drun

# show clipmenu
super + ctrl + slash
    CM_LAUNCHER=rofi clipmenu \
        #-no-show-icons

# selector for hidden windows in the current workspace
super + alt + slash
  rofi-hidden

#
# bspwm hotkeys
#

# reload bspwm or sxhkd configuration files:
super + alt + {button1, button2}
    {pkill -usr1 -x sxhkd && sxhkd, bspc wm -r}

# warpd hotkeys
super + {button1, button2, button3}
  warpd {--hint2, --normal, --grid}

# toggle Telegram
#alt + c
    #bspwm-toggle-visibility TelegramDesktop telegram-desktop

# toggle Tagaini Jisho
#super + r ; t
    #bspwm-toggle-visibility tagainijisho --take-first

# toggle Ptpython
#super + r ; p
    #bspwm-toggle-visibility floating_ptpython "$TERMCMD --class floating_ptpython ptpython"

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + z
	bspc desktop -l next

# send the current or newest marked node to the newest preselected node
super + ctrl + {_,shift + }z
	bspc node {-n last.!automatic, newest.marked.local -n newest.!automatic.local}

# swap the current node and the biggest window
super + shift + z
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {1,2,3,4}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + shift + {1,2,3,4,5}
	bspc node -g {marked,locked,sticky,private,hidden=on}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
#super + {_,shift + }c
	#bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + ctrl + {i, o}
	bspc desktop -f {prev,next}.local

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{a,s,d,f,g}
	bspc {desktop -f,node -d} '^{1,2,3,4,5}' --follow

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + q
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + q
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

#super + s : {h,j,k,l}
    #STEP=20; SELECTION={1,2,3,4}; \
    #bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
    #bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + ctrl + {a,s,w,d}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# vim: set ft=sxhkdrc:
